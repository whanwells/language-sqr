'scopeName': 'source.sqr'
'name': 'SQR'
'fileTypes': [
  'sqr'
  'sqc'
]
'foldingStartMarker': '(?i)^\\s*+(begin-program|begin-procedure|if|begin-report|begin-heading|begin-select|begin-sql|#ifdef).*'
'foldingStopMarker': '(?i)^\\s*+(end-program|end-procedure|end-if|end-report|end-heading|end-select|end-sql|#end-if).*'
'patterns': [
  {
    'captures':
      '1':
        'name': 'punctuation.definition.comment.sqr'
    'match': '(!).*$\\n?'
    'name': 'comment.line.bang.sqr'
  }
  {
    'match': '[\\+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[Ee][\\+-]?\\d+)?'
    'name': 'constant.numeric.sqr'
  }
  {
    'match': '(?i)\\b(?:begin|end)-report\\b'
    'name': 'invalid.deprecated.sqr'
  }
  {
    'match': '(?i)(?:\\b(?:(?:end-)?(?:if|evaluate|while)|break|else|when(?:-other)?)\\b|#(?:if(?:n?def)?|else|end-?if))'
    'name': 'keyword.control.sqr'
  }
  {
    'match': '(?i)\\b(?:let|begin-procedure|end-procedure|do|show|call|using|print|goto|begin-heading|end-heading|end-select|end-sql|begin-select|begin-sql)\\b'
    'name': 'keyword.control.sqr'
  }
  {
    'begin': '#include'
    'captures':
      '1':
        'name': 'keyword.control.import.include.sqr'
    'end': '(?=(?://|/\\*))|$'
    'name': 'meta.preprocessor.sqr.include'
    'patterns': [
      {
        'match': '(?>\\\\\\s*\\n)'
        'name': 'punctuation.separator.continuation.sqr'
      }
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.sqr'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.sqr'
        'name': 'string.quoted.double.include.sqr'
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'punctuation.definition.variable.sqr'
    'match': '(#|\\$|&|%|@)[\\w-]+'
    'name': 'variable.other.sqr'
  }
  {
    'captures':
      '1':
        'name': 'punctuation.definition.constant.begin.sqr'
      '2':
        'name': 'punctuation.definition.constant.end.sqr'
    'match': '({)[\\w-]+(})'
    'name': 'constant.other.sqr'
  }
  {
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.sqr'
    'end': '\'(?!\')'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.sqr'
    'name': 'string.quoted.single.sqr'
    'patterns': [
      {
        'match': '\'\''
        'name': 'constant.character.escape.sqr'
      }
    ]
  }
]
